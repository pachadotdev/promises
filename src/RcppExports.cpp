// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// asyncFib
void asyncFib(Rcpp::Function resolve, Rcpp::Function reject, double x);
RcppExport SEXP _promises_asyncFib(SEXP resolveSEXP, SEXP rejectSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type resolve(resolveSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type reject(rejectSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    asyncFib(resolve, reject, x);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_promises_asyncFib", (DL_FUNC) &_promises_asyncFib, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_promises(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
